{% include "base.html.twig"%}
<style>
.carousel-indicators li{
  background-color: #000000;
}
.border{
  border: 1px solid #dbe9e8;
}
.button{
  width: 150px;
}
.outOfStock{
  position: absolute;
}
p{
  word-wrap: break-word
}
</style>
<div class="container-fluid" id="controls" name="controls">
  <div class="row">
    <div class="col-auto mr-auto">
      <button type="button" class="btn btn-outline-success" id="btnAddNew">Add New Item</button>
    </div>
    <div class="col-auto" button>
      <button type="button" class="btn btn-outline-success" id="btnCreateJson">Create Json</button>
    </div>
  </div>
</div>
<div class="container-fluid" id="publish_control" name="publish_control">
  <div class="row">
    <div class="col-auto mr-auto">
      <button type="button" class="btn btn-outline-success" id="publish">Publish</button>
    </div>
    <div class="col-auto" button>
      <button type="button" class="btn btn-outline-success" id="notPublish">Not Publish</button>
    </div>
  </div>
</div>
<div class="container-fluid" id="items" name="items">
</div>
<script>
var logic = {
  items:{},
  noOfCols:0,
  init:function(){
    window.onresize = logic.itemRearange;
    $("#btnCreateJson").on("click",function(){ 
      logic.createJson();
    });
    $("#btnAddNew").on("click",function(){ 
      logic.addNewProduct();
    });
    $("#notPublish").on("click",function(){ 
      logic.makeNoPublish();
    });
    $("#publish").on("click",function(){ 
      logic.makePublish();
    });
    logic.dataload();
  },
  dataload:function(){
    THO.GET("/api/ApiAdmin", {}, function(text, data, xml) {
      var json = data.json();
      logic.items = json;
      THO.setItemsAdmin("items", logic.items);
      logic.setNoOfCols();
    });
  },
  setNoOfCols:function(){
    var width = window.innerWidth;
    logic.noOfCols = parseInt(width/180);
  },
  itemRearange:function(){
    var width = window.innerWidth;
    console.log("itemRearange");
    console.log("itemRearangeï¼š" + width);
    var noOfCols = parseInt(width/180);
    if((noOfCols != logic.noOfCols) && (noOfCols != 1)){
      logic.noOfCols = noOfCols;
      console.log(logic.noOfCols);
      THO.setItemsAdmin("items", logic.items);
    }
  },
  createJson:function(){
    THO.POST("/api/ApiAdmin/createJson", {}, function(text, data, xml) {
      webix.message("Json Updated");
    });
  },
  addNewProduct:function(){
    THO.POST("/api/ApiAdmin/addNewProduct", {}, function(text, data, xml) {
      THO.pageMoveProductEdit(data.json());
    });
  },
  makeNoPublish:function(){
    THO.POST("/api/ApiAdmin/makeNoPublish", {}, function(text, data, xml) {
      webix.message("Make No Publish");
    });
  },
  makePublish:function(){
    THO.POST("/api/ApiAdmin/makePublish", {}, function(text, data, xml) {
      webix.message("Make Publish");
    });
  }
};
webix.ready(function () {
  logic.init();
});
</script>
{% include "footer.html.twig"%}
